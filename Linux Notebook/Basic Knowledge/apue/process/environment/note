
进程环境

进程：运行的程序
线程：运行的函数

一.main()函数
	启动例程
		exit(main(argc, argv));

二.进程终止的8种方式
正常终止方式
	<1>main()函数使用return语句
	<2>调用exit(3)函数
		1)如果在main()函数中调用exit(3)，作用与return相同
		2)如果在其他函数中调用exit(3),终止进程
		3)在调用系统调用函数_exit(2)或_Exit(2)前，执行终止处理函数和IO清理函数

	<3>调用_exit(2)或_Exit(2);
	<4>最后一个线程从启动例程返回
	<5>最后一个线程调用pthread_exit(3);
异常终止方式
	<1>调用abort(3);
	<2>接收到信号并使进程终止
	<3>最后一个线程对取消做出响应

注册终止处理程序(钩子函数)
	atexit(3);
		1)在进程正常终止(exit(3)或main()return)会以注册相反的顺序执行注册函数
		2)同一个函数可以被注册多次，每注册一次都会调用一次

了解on_exit(3);

三.命令行的解析
shell命令行：
	<1>不带选项的参数
		ls /etc/passwd
	<2>选项参数
		ls -li
	<3>带参数的选项
		gcc a.c -Wall	all就是选项-W的参数	
		tar -cvf bao.tar file*  bao.tar是选项-f的参数
	<4>长格式参数
		ls --help

	int getopt(int argc, char **argv, const char *optstring);

	argc 和 argv就是main()的形参
	optstring规则：
		1)如果要解析非选项的参数,optstring一定以'-'开头	
		2)如果要解析选项,例如解析-l,则optstring用有字符'l'
		3)如果要解析带参数的选项,例如-f bao.tar或者-Wall,则optstring有"f:"
		4)如果要解析可选择参数的选项,则optstring要求"-s::"

	getopt_long(3);


四.环境变量和环境表
	"name=value"
	extern char **environ;

	getenv(3);
	setenv(3);
	putenv(3);

五.C存储分布

六.共享库
	gcc -fPIC -shared -o xxx.so a.c b.c ...

	手工装载库
		dlopen(3);
		dlsym(3);
		dlclose(3);

七.存储器的分配
	malloc(3);
	calloc(3);
	realloc(3);
	free(3);

八.setjmp(3)和longjmp(3)
	实现函数间的跳转

九.了解setrlimit()和getrlimit()



